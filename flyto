local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local CONFIG = {
    FlySpeed = 30,  -- Increased speed for more Superman-like flight
    VehicleFlySpeed = 30,
    QEfly = true,
}

local FLYING = false
local flyKeyDown, flyKeyUp
local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
local SPEED = 0

local function FLY(vfly)
    repeat wait() until LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    local humanoidRootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    local function fly()
        FLYING = true
        local bodyGyro = Instance.new('BodyGyro')
        local bodyVelocity = Instance.new('BodyVelocity')
        bodyGyro.P = 9e4
        bodyGyro.Parent = humanoidRootPart
        bodyVelocity.Parent = humanoidRootPart
        bodyGyro.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        bodyVelocity.maxForce = Vector3.new(9e9, 9e9, 9e9)
        bodyGyro.CFrame = humanoidRootPart.CFrame

        task.spawn(function()
            while FLYING do
                local direction = Vector3.new()
                if CONTROL.F + CONTROL.B ~= 0 then
                    direction = direction + (Camera.CFrame.LookVector * (CONTROL.F + CONTROL.B))
                end
                if CONTROL.L + CONTROL.R ~= 0 then
                    direction = direction + (Camera.CFrame.RightVector * (CONTROL.L + CONTROL.R))
                end
                if CONFIG.QEfly then
                    if CONTROL.Q + CONTROL.E ~= 0 then
                        direction = direction + (Camera.CFrame.UpVector * (CONTROL.Q + CONTROL.E))
                    end
                end

                if direction.Magnitude > 0 then
                    bodyVelocity.Velocity = direction.Unit * SPEED
                else
                    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                end

                bodyGyro.CFrame = Camera.CFrame
                wait()
            end

            -- Cleanup
            bodyGyro:Destroy()
            bodyVelocity:Destroy()
            if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
                LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
            end
        end)
    end

    flyKeyDown = UserInputService.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode.Name:lower()
            if key == 'w' then
                CONTROL.F = (vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed)
            elseif key == 's' then
                CONTROL.B = -(vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed)
            elseif key == 'a' then
                CONTROL.L = -(vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed)
            elseif key == 'd' then
                CONTROL.R = (vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed)
            elseif CONFIG.QEfly and key == 'e' then
                CONTROL.Q = (vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed) * 2
            elseif CONFIG.QEfly and key == 'q' then
                CONTROL.E = -(vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed) * 2
            end
            pcall(function() Camera.CameraType = Enum.CameraType.Track end)
            SPEED = vfly and CONFIG.VehicleFlySpeed or CONFIG.FlySpeed
        end
    end)

    flyKeyUp = UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Keyboard then
            local key = input.KeyCode.Name:lower()
            if key == 'w' then
                CONTROL.F = 0
            elseif key == 's' then
                CONTROL.B = 0
            elseif key == 'a' then
                CONTROL.L = 0
            elseif key == 'd' then
                CONTROL.R = 0
            elseif key == 'e' then
                CONTROL.Q = 0
            elseif key == 'q' then
                CONTROL.E = 0
            end

            if CONTROL.F + CONTROL.B == 0 and CONTROL.L + CONTROL.R == 0 and CONTROL.Q + CONTROL.E == 0 then
                SPEED = 0
            end
        end
    end)

    fly()
end

local function NOFLY()
    FLYING = false
    if flyKeyDown or flyKeyUp then flyKeyDown:Disconnect() flyKeyUp:Disconnect() end
    if LocalPlayer.Character:FindFirstChildOfClass('Humanoid') then
        LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
    end
    pcall(function() Camera.CameraType = Enum.CameraType.Custom end)
end

local function teleportToPlayer(namePart)
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            local lowerUsername = player.Name:lower()
            local lowerDisplayName = player.DisplayName:lower()
            if lowerUsername:find(namePart) or lowerDisplayName:find(namePart) then
                local targetCharacter = player.Character
                if targetCharacter and targetCharacter:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character:MoveTo(targetCharacter.HumanoidRootPart.Position)
                    return
                end
            end
        end
    end
end

LocalPlayer.Chatted:Connect(function(message)
    if message:lower():sub(1, 4) == ".to " then
        local namePart = message:sub(5):lower()
        teleportToPlayer(namePart)
    end
end)

-- Keybind for toggling fly
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Z then
        if FLYING then
            NOFLY()
        else
            FLY()
        end
        print(FLYING and "Fly enabled." or "Fly disabled.")
    end
end)
