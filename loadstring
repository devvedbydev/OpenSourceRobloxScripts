-- SET IDENTITY
getgenv().name = "SystemHook"
getgenv().identity = "SystemHook"
getgenv().threadidentity = "Systemhook"
getgenv().identifyexecutor = function()
    getgenv().thread_identity = 0
    return "SystemHook"
end
getgenv().getexecutorname = function()
    return "SystemHook"
end
getgenv().identify = function()
    return "SystemHook"
end
getgenv().printidentity = function()
    print("SystemHook")
end
getgenv().getthreadidentity = function()
    return thread_identity
end
getgenv().setthreadidentity = function(identity)
    thread_identity = identity
end

-- WELCOME USER
print("Welcome " .. game.Players.LocalPlayer.DisplayName .. ", thank you for choosing SystemHook.")

-- INTERNAL GUI
loadstring(HttpGet("https://raw.githubusercontent.com/hitbyharibo/byfron/main/internal_ui"))()

-- SET UUID
local url = "http://httpbin.org/ip"
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
getgenv().sys_ip = nil  -- Declare sys_ip globally

local function getIP()
    local response = game:HttpGet(url)
    local success, data = pcall(function()
        return HttpService:JSONDecode(response)
    end)
    if success and data then
        return data.origin
    else
        return nil
    end
end

local function longHash(input)
    local hash = 0xFFFFFFFF
    for i = 1, #input do
        local char = input:byte(i)
        hash = (hash * 31 + char) % 0xFFFFFFFF
    end
    local longHash = string.format("%08X%08X", hash, (hash * 31) % 0xFFFFFFFF)
    return longHash
end

local function generateUUID(username, ip)
    local rawString = username .. ip
    return longHash(rawString)
end

local function main()
    local player = Players.LocalPlayer
    if player then
        local username = player.Name
        local ip = getIP()
        if ip then
            getgenv().sys_ip = ip  -- Store IP in global variable
            if not getgenv().sys then
                getgenv().sys = {}
            end
            getgenv().sys_uuid = generateUUID(username, ip)
        else
            print("ERROR: 0xIP")
        end
    else
        print("ERROR: 0xPNF")
    end
end
main()

-- SET USERAGENT
local function setupUserAgentModification()
    local originalRequest = request
    request = function(requestParams)
        local response = originalRequest(requestParams)
        if response and response.StatusCode == 200 then
            local success, data = pcall(function()
                return game:GetService("HttpService"):JSONDecode(response.Body)
            end)
            if success and type(data) == "table" then
                data["user-agent"] = "SystemHook"
                response.Body = game:GetService("HttpService"):JSONEncode(data)
            end
        end
        return response
    end
end
setupUserAgentModification()

-- SYS POST
local HttpService = game:GetService("HttpService")
local function urlEncode(str)
    return str:gsub("[^%w]", function(c)
        return string.format("%%%02X", string.byte(c))
    end):gsub(" ", "+")
end
getgenv().sys_post = function(params)
    local url = "http://localhost:5000/syspost"
    if not params.Url or not params.Body then
        return {
            StatusCode = 400,
            Body = "Missing URL or Body in request"
        }
    end
    local queryString = "post_url=" .. urlEncode(params.Url) .. "&content=" .. urlEncode(params.Body)
    local requestUrl = url .. "?" .. queryString
    local response
    local success, err = pcall(function()
        response = game:HttpGet(requestUrl)
    end)
    if not success then
        return {
            StatusCode = 500,
            Body = "Request failed: " .. tostring(err)
        }
    end
    local responseData = HttpService:JSONDecode(response)
    return {
        StatusCode = responseData.status == "success" and 200 or 500,
        Body = responseData.response or responseData.message
    }
end

-- KEEP RUNNING IN LOOP
while true do
    wait(0.01)
end
